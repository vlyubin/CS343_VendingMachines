The first part of testing is incorrect usage testing. To do this, we check the behaviour of the program
on various invalid usages, like too many parameters or invalid values:

linux028:~/cs343/a6/CS343_A6> make
make: Nothing to be done for `all'.

linux028:~/cs343/a6/CS343_A6> ./soda 1 2 3 
Usage: ./soda [ config-file [ random-seed (> 0) ] ]

linux028:~/cs343/a6/CS343_A6> ./soda UNEXISTING_CONFIG_FILE
Error: could not open input file "UNEXISTING_CONFIG_FILE"

linux028:~/cs343/a6/CS343_A6> ./soda soda.config -1
Usage: ./soda [ config-file [ random-seed (> 0) ] ]

linux028:~/cs343/a6/CS343_A6> ./soda soda.config SHOULD_BE_INT
Usage: ./soda [ config-file [ random-seed (> 0) ] ]

We correctly handle invalid inputs.

---------------------------------------------------------------------

The huge part of testing comes from assertions placed in the code, that will force the program to quit
when encountering abnormal condition. The tests in the code are the following:

1) Amount of soda in vending machines always stays valid.
2) NameServer data remains consistent.
3) Bottling plant generates valid amounts of soda.
4) Truck picks up and restocks valid amounts of soda.

// TODO: Add more

Additionally we can check that no deadlocks or other problems arise. We've made a script that will allow us to
check some possible input combos. For each combo of input parameters, we generate appropriate config file, and
run our program with it. If the deadlock will happen, the script will stop in the middle, without printing
FINISHED message. If asseriton fails, the message will get printed to console.
Here's the result of running the tests:

linux028:~/cs343/a6/CS343_A6> cat testscript.sh 
#!/bin/bash -e

# Example input file:
#
# SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
# NumStudents             2    # number of students to create
# MaxPurchases            8    # maximum number of bottles a student purchases
# NumVendingMachines      3    # number of vending machines
# MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
# MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
#                              #    plant per production run
# TimeBetweenShipments    3    # length of time between shipment pickup
# ParentalDelay           2    # length of time between new deposits of funds
# NumCouriers             1    # maximum number of couriers in the pool

`touch testfile.config`

for SodaCost in `seq 1 6`;
do
for NumStudents in `seq 1 5`;
do
for MaxPurchases in `seq 1 3`;
do
for NumVendingMachines in `seq 1 3`;
do
for MaxStockPerFlavour in `seq 1 2`;
do
for MaxShippedPerFlavour in `seq 1 2`;
do
for TimeBetweenShipments in `seq 4 4`;
do
for ParentalDelay in `seq 1 1`;
do
for NumCouriers in `seq 1 2`;
do
for seed in `seq 1 3`;
do

`echo "SodaCost $SodaCost
NumStudents $NumStudents
MaxPurchases $MaxPurchases
NumVendingMachines $NumVendingMachines
MaxStockPerFlavour $MaxStockPerFlavour
MaxShippedPerFlavour $MaxShippedPerFlavour
TimeBetweenShipments $TimeBetweenShipments
ParentalDelay $ParentalDelay
NumCouriers $NumCouriers
" >  testfile.config`

echo "Running soda testfile.config $seed"
`./soda testfile.config $seed >/dev/null`

done
done
done
done
done
done
done
done
done
done

echo "VERIFICATION FINISHED."
linux028:~/cs343/a6/CS343_A6> make
make: Nothing to be done for `all'.
linux028:~/cs343/a6/CS343_A6> sh testscript.sh 
Running soda testfile.config 1
Running soda testfile.config 2
Running soda testfile.config 3
Running soda testfile.config 1
Running soda testfile.config 2

// MORE OUTPUT

Running soda testfile.config 1
Running soda testfile.config 2
Running soda testfile.config 3
VERIFICATION FINISHED.

So we see that the script successfully finished execution. Thus, no deadlocks happened throughout the execution,
as well as no assertions were triggered.

---------------------------------------------------------------------

The last part of testing comes from inspection of interesting cases. Here are some interesting cases that we are
going to inspect.

1) Let's run the solution on the sample configs with the seed value of 77:

linux028:~/cs343/a6/CS343_A6> make
make: Nothing to be done for `all'.
linux028:~/cs343/a6/CS343_A6> ./soda soda.config 77
Parent  WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Mach1   Mach2   Cour0
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
                S                                       S2
S       S       R0      S       S       S2,3    S2,6            S2      S2      S
D1,1    W       R1              G4
D0,3            R2                                                              t0,5
D1,3    C0,5    N0,0                    V0
D0,1    C1,5    N1,1                            V1
D1,3
D1,3                    P4      P
                        d0,4                            r
D0,1                    U0,16                           R                       T0,5
                        D0,0
                        d1,0                                    r
D0,3    C0,5            U1,20   G7      L                       R
                        D1,0
                        d2,0                                            r
                        U2,20                                                   t1,5
D1,2    W       N1,2    D2,0                    V2                      R       T1,5
D1,3            N1,0                            V0      B2,0                    t0,5
        W       N1,1                            B3
D1,3            N1,2                            V1
D1,1            N1,0                            V2
D1,2            N1,1                            V0
D0,3                    P7      P               V1
                        d0,7                            r
D1,3            N1,2    U0,10                   V2      R                       T0,5
                        D0,0
                        d1,0                                    r
D1,3    W       N1,0    U1,20   G5      B3      V0      B2,1    R
                        D1,0
                        d2,0                                            r
D0,3                    U2,20                   B1      B2,0            R
D0,2            N0,1    D2,0            V1
D0,2            N0,2                    V2
D0,1            N0,0                    V0
D0,3            N0,1    P5      P       V1
                        d0,5                            r
D0,3            N0,2    U0,9            V2              R
                        D0,2
                        d1,2                                    r
D1,3            N0,0    U1,18   G7      V0                      R
                        D1,0
                        d2,0                                            r
D0,2                    U2,20           B1              B2,0                    t1,7
D1,2    T1,7    N1,1    D2,0                    V1                      R       T1,7
D1,1    W       N0,1    P7      P       V1
                        d0,7                            r
D1,2            N0,2    U0,6            V2              R
                        D0,3
                        d1,3                                    r
D1,1            N0,0    U1,15   G7      V0                      R
                        D1,0
                        d2,0                                            r
D0,2            N1,2    U2,20                   V2                              t0,7
D1,1    T0,7    N1,0    D2,0            B6      V0      B2,0            R       T0,7
...     ...     ...     ...     ...     F       ...     ...     ...     ...     ...
D0,1    W       N1,1                            V1
D0,1            N1,2    P7      P               V2
                        d0,7                            r
D0,2            N1,0    U0,3                    V0      R
                        D0,3
                        d1,3                                    r
D1,1                    U1,13   G7              B6      B2,2    R
                        D1,1
                        d2,1                                            r
D1,3                    U2,19                                           R
D0,2                    D2,0    P
                        P7
                        d0,7                            r
D0,3                    U0,1                            R
                        D0,4
                        d1,4                                    r
D1,3                    U1,10   G7              B4      B2,3    R
                        D1,1
                        d2,1                                            r
D0,3                    U2,18                   B2      B2,2            R
D0,3                    D2,0
D1,3                    P7      P
                        d0,7                            r
D1,3                    U0,1                            R
                        D0,5
                        d1,5                                    r
D1,1                    U1,6    G7                              R
                        D1,1
                        d2,1                                            r
D0,2                    U2,17                   B0      B2,3
...     ...     ...     ...     ...     ...     F       ...     ...     ...     ...
D0,3                    D2,0                                            R
F       ...     ...     ...     ...     ...     ...     ...     ...     ...     ...
...     F       ...     ...     ...     ...     ...     ...     ...     ...     ...
                        P7      P
                        d0,7                            r
                        D0,5                            R
                        d1,5                                    r
                        U1,6    G6                              R
                        D1,5
                        d2,5                                            r
                        U2,13                                           R
                        D2,1
...     ...     ...     F       ...     ...     ...     ...     ...     ...     ...
...     ...     ...     ...     F       ...     ...     ...     ...     ...     ...
...     ...     ...     ...     ...     ...     ...     F       ...     ...     ...
...     ...     ...     ...     ...     ...     ...     ...     F       ...     ...
...     ...     ...     ...     ...     ...     ...     ...     ...     F       ...
...     ...     F       ...     ...     ...     ...     ...     ...     ...     ...
***********************

As you can see, there are no anomalies: students are repeatedly checking different vending
machines and terminate as soon as they are done (refernce solution does the sanme),
truck keeps delivering soda, parent keeps providing money and so on.

2) Abnormally expensive soda. soda.config has the same values as in sample, with the exeption of SodaCost, which
is now 100. Since funds can only be increased by 5$, this means that students will need a while to get the needed
funds. Here's a shortened output:

Parent  WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Mach1   Mach2   Cour0
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
                S                                       S100
S       S       R0      S       S       S0,4    S0,8            S100    S100    S
D1,1    W       R1              G3
D0,2            R2                                                              t0,5
D1,1    C0,5    N0,0                    V0
D1,2    C1,5    N1,1                            V1
D1,2
D1,2
D1,3
D0,1                    P3      P
                        d0,3                            r
D0,2                    U0,17                           R                       T0,5
                        D0,0
                        d1,0                                    r
D0,1                    U1,20                                                   t1,5
                N0,1    D1,0    G10     V1                      R               T1,5
                        d2,0                                            r
D1,1    W       N0,2    U2,20           V2                              R
D0,3    W       N1,2    D2,0                    V2
D1,3            N0,0    P10     P       V0
D0,2            N0,1    d0,10           V1              r
D1,3            N1,0    U0,7                    V0      R
                        D0,0
                        d1,0                                    r
D0,3            N0,2    U1,20   G5      V2                      R
                        D1,0
D1,3            N0,0    d2,0            V0                              r
D0,1    T1,105          U2,20                                           R       t1,105

// MORE OUTPUT

                        d1,7    G9                              r
                        D1,7                                    R
                        d2,7                                            r
                        D2,7                                            R
...     ...     ...     F       ...     ...     ...     ...     ...     ...     ...
...     ...     ...     ...     F       ...     ...     ...     ...     ...     ...
...     ...     ...     ...     ...     ...     ...     F       ...     ...     ...
...     ...     ...     ...     ...     ...     ...     ...     F       ...     ...
...     ...     ...     ...     ...     ...     ...     ...     ...     F       ...
...     ...     F       ...     ...     ...     ...     ...     ...     ...     ...
***********************

What is worth noticing is that reference solution printed 1565 lines for this case, while our solution printed
1632. This means that overall efficiency was quite similar for them. In addition to that, it can be noticed that
the overall structure of prints is quite similar as well. Hence we can claim that our solution performs as expected
on this testcase.

3) Lots of students. soda.config is the same as in sample, with the exception that the student count is 10 in the
first sub-test and 50 in the second sub-test. Both executions terminated successfully. Linewise, the counts were
398 vs 295 and 1692 vs 1791 (OurSolution vs ReferenceSolution). The counts are quite close to each other, which
again advocates for the correctness of our solution.

4) Next interesting case is when vending machines can only contain one bottle per flavour, and truck can only
ship one bottle per flavour. In addition to that, we set large TimeBetweenShipments and ParentalDelay values.
Here's a complete list:

SodaCost                5    # Manufacturer Suggested Retail Price (MSRP) per bottle
NumStudents             3    # number of students to create
MaxPurchases            8    # maximum number of bottles a student purchases
NumVendingMachines      3    # number of vending machines
MaxStockPerFlavour      1    # maximum number of bottles of each flavour in a vending machine
MaxShippedPerFlavour    1    # maximum number of bottles of each flavour generated by the bottling
                             #    plant per production run
TimeBetweenShipments    20    # length of time between shipment pickup
ParentalDelay           20    # length of time between new deposits of funds
NumCouriers             1    # maximum number of couriers in the pool

The execution result is:

Parent  WATOff  Names   Truck   Plant   Stud0   Stud1   Stud2   Mach0   Mach1   Mach2   Cour0
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
                S                                               S5
S       S       R0      S       S       S0,4    S1,3    S1,1            S5      S5      S
        W       R1
                R2                                                                      t0,5
        C0,5    N0,0                    V0
        C1,5    N1,1                            V1
D1,1    C2,5    N2,2            G4                      V2
                        P4      P
                        d0,4                                    r
                        D0,0                                    R
                        d1,0                                            r
                        U1,4                                            R
                        D1,0
                        d2,0                                                    r
                        U2,4                                                    R

// MORE OUTPUT

                        d0,3                                    r
                        D0,3                                    R
                        d1,3                                            r
                        D1,3                                            R
                        d2,3                                                    r
                        D2,3    G3                                              R
...     ...     ...     F       ...     ...     ...     ...     ...     ...     ...     ...
...     ...     ...     ...     F       ...     ...     ...     ...     ...     ...     ...
...     ...     ...     ...     ...     ...     ...     ...     F       ...     ...     ...
...     ...     ...     ...     ...     ...     ...     ...     ...     F       ...     ...
...     ...     ...     ...     ...     ...     ...     ...     ...     ...     F       ...
...     ...     F       ...     ...     ...     ...     ...     ...     ...     ...     ...
***********************

The length of the result is 479 lines, while the sample solution prints 499 lines. Again, the results are very
close. Again, no anomalies were detected.

5) Now, let's use the test values from the sample configs, with the exception that MaxStockPerFlavour is 100 and
MaxShippedPerFlavour is 1. Considering that students are only making <= 8 purchases, every delivery should be
unsuccessful.

Parent  WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Mach1   Mach2   Cour0
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
                S                                       S2
S       S       R0      S       S       S0,3    S3,3            S2      S2      S
D1,3    W       R1              G2
D0,1            R2                                                              t0,5
D1,3    C0,5    N0,0                    V0
D1,1    C1,5    N1,1    P2      P               V1
                        d0,2                            r
D1,1                    U0,398                          R
                        D0,0
                        d1,0                                    r
D0,1                    U1,400  G1                              R
                        D1,0
                        d2,0                                            r
D0,2                    U2,400                                          R
D1,3                    D2,0
D0,2                    P1      P
                        d0,1                            r
D1,3                    U0,397                          R                       T0,5

// MORE OUTPUT

...     ...     ...     ...     ...     ...     ...     ...     F       ...     ...
...     ...     ...     ...     ...     ...     ...     ...     ...     F       ...
...     ...     F       ...     ...     ...     ...     ...     ...     ...     ...
***********************

Execution finished successfully without any anomalies. Furthermore, you can see that each delivery
that truck makes is unsuccessfull as expected.

6) Lastly, let's check what happens when there is only one vending machine (other parameters are the same
as in sample).

Parent  WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Cour0
******* ******* ******* ******* ******* ******* ******* ******* *******
                S                                       S2
S       S       R0      S       S       S0,3    S2,1            S
D1,2    W       N0,0            G6      V0
D0,3                    P6      P                               t0,5
                        d0,6                            r
D1,1    C0,5    N1,0    U0,14                   V0      R
D1,1    C1,5            D0,0    G5
D1,3
D1,3
D0,3                                                    B0,0    T0,5
D1,2                                                            t1,5
                        P5      P                               T1,5
                        d0,5                            r
D0,3    W               U0,11           B3              R
D1,1    W               D0,1    G4              B3      B2,1
...     ...     ...     ...     ...     ...     F       ...     ...
D0,3                                    B1              B0,0
D1,2
D1,1            N0,0    P4      P       V0
D1,3            N0,0    d0,4            V0
D0,1                    U0,10   G7                      r
D0,2                    D0,1                            R
D1,3
D0,1                                                            t0,7
D1,2    T0,7            P7      P                       B0,0    T0,7
                        d0,7                            r
                        U0,6            B6
...     ...     ...     ...     ...     F       ...     ...     ...
D0,1    W               D0,2                            R
D0,3                            G6
F       ...     ...     ...     ...     ...     ...     ...     ...
...     F       ...     ...     ...     ...     ...     ...     ...
                        P6      P
                        d0,6                            r
                        D0,0    G4                      R
...     ...     ...     F       ...     ...     ...     ...     ...
...     ...     ...     ...     F       ...     ...     ...     ...
...     ...     ...     ...     ...     ...     ...     F       ...
...     ...     F       ...     ...     ...     ...     ...     ...
***********************

Students didn't end up buying too many bottles, so the execution was short. No anomalies.
